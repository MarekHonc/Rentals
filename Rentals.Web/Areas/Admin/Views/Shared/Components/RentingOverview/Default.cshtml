@model Rentals.Web.Areas.Admin.Models.RentingOverviewViewModel
@using Rentals.Web.Localization
@using Rentals.Common.Enums

<h3>@Admin.RentingOverview_NonReturned</h3>
@await Html.PartialAsync("_Rentings", Model.ShouldBeRetuned)

<h3>@Admin.RentingOverview_ToBeReturned</h3>
@await Html.PartialAsync("_Rentings", Model.ToBeRetuned)

<h3>@Admin.RentingOverview_StartingToday</h3>
@await Html.PartialAsync("_Rentings", Model.StartingToday)

<h3>@Admin.RentingOverview_OnGoing</h3>
@await Html.PartialAsync("_Rentings", Model.OnGoing)

<h3>@Admin.RentingOverview_Returned</h3>
@await Html.PartialAsync("_Rentings", Model.Returned)

<div class="modal fade" tabindex="-1" role="dialog" id="set-lended-modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">@Admin.RentingOverView_RentingInPastHeader</h4>
			</div>
			<div class="modal-body">
				<p>@Admin.RentingOverView_RentingInPast</p>
				<p>@Admin.RentingOverView_MarkAs</p>
				<button type="button" class="btn btn-primary" id="set-lended">@Admin.RentingOverView_MarkAsLended</button>
				<button type="button" class="btn btn-primary" id="set-returned">@Admin.RentingOverView_MarkAsReturned</button>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">@GlobalResources.Close</button>

			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	function setState(id, state) {
		$.ajax({
			url: '@Url.Action("SetState", "Renting")',
			data: {
				id: id,
				state: state
			},
			success: function (data) {
				$("#component-container").load('@Url.Action("ReloadComponentView", "Home")');
			},
			error: function (data) {
				alert('@Html.Raw(Admin.RentingOverview_CannotChangeState)');
			}
		});
	}

	function setLended(id, time) {
		if (time < Date.now()) {
			var $modal = $("#set-lended-modal")
			$modal.modal("show");

			$("#set-lended").click(function () {
				setState(id, "@RentalState.Lended");
				$modal.modal("hide");
			})
			$("#set-returned").click(function () {
				setState(id, "@RentalState.Returned");
				$modal.modal("hide");
			})
			@* pokud již skončila, a che nastavit že je vypůjčená, zeptát se jestli si tím je jist, nebo jestli zapomněl, pokud zapomněl, rovnou se zeptám jestli ji chce označit jako vrácenou *@
		}
		else {
			return setState(id, "@RentalState.Lended");
			@* pro teď počítám že předměty již jsou vybraný, později možná dialog jestli chce ještě změnit předměty, což by asi neměl, jestli je chce změnit tak ať zruší výpůjčku a vytvoří novou For now. *@
		}
	}

	function setCanceled(id, message) {
		if (confirm(message)) {
			setState(id, "@RentalState.Canceled")
		}
	}
</script>