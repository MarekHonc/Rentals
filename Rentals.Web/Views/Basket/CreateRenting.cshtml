@model Rentals.Web.Models.RentingUserCreatorViewModel
@using Rentals.Web.Localization
@using Rentals.Web.Code

@{
	ViewBag.Title = Localization.Basket;
}

<h2>@Localization.Renting_Basket</h2>

@if (Model.Items.Count > 0)
{
	<section>
		@foreach (var item in Model.Items)
		{
		<div class="row">
			<div class="col-sm-8 col-sm-push-4">
				<form method="post" class="form-inline pull-right" asp-controller="Basket" asp-action="RemoveItemFromBasket" id="remove-item">
					<input type="hidden" value="@(item.IsSpecificItem ? item.UniqueId : item.Name)" name="item" />
					<button type="submit" class="btn btn-danger">x</button>
				</form>
				@if (!item.IsSpecificItem)
				{
					<form method="post" class="form-inline pull-right" asp-controller="Basket" asp-action="AddItemsToBasket" id="add-items">
						<input type="hidden" value="@item.Name" name="itemType" />
						<input id="count" type="number" class="form-control" min="1" max="@item.NumberOfItems" value="@(Model.User.Basket[item.Name])" name="count" />
						<button type="submit" class="btn btn-success">@Localization.ItemDetail_ChangeCart</button>
					</form>
				}
				<p class="h3">@(item.IsSpecificItem ? item.UniqueId : item.Name)</p>
				<p class="h4">@string.Format(Localization.Renting_WillBerented, item.IsSpecificItem ? 1 : Model.User.Basket[item.Name])</p>
				<p>@Localization.ItemDetail_NumberOfItems: @item.NumberOfItems</p>
			</div>
			<figure class="col-sm-4 col-sm-pull-8">
				<img src="@item.CoverImage" class="img-responsive" alt="@item.Name" />
			</figure>
		</div>
		}
	</section>
}
else
{
	<p>@Localization.Renting_NothingInBasket</p>
}


<form asp-action="CreateRenting" asp-controller="Basket" method="post">
	<input type="hidden" name="@Html.NameFor(m => m.RentalId)" value="@Model.RentalId" />

	@Html.ValidationSummary()

	<div class="form-group row">
		<div class="col-xs-12">
			<label for="starts-at-date" class="control-label">@Localization.Renting_StartsAt</label>
			<div class="row">
				<div class="col-sm-6">
					<input type="date" name="@Html.NameFor(m => m.StartsAtDate)" id="starts-at-date" value="@Model.StartsAtDate" class="form-control" />
				</div>
				<div class="col-sm-6">
					<select asp-for="StartsAtTime"
							asp-items="@Html.WorkingHourSelectList(Model.Rental.TimeList.ToArray(), Model.StartsAtTime)"
							class="form-control"></select>
				</div>
			</div>
			@Html.ValidationMessageFor(m => m.StartsAtDate, string.Empty, new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group row">
		<div class="col-xs-12">
			<label for="ends-at-date" class="control-label">@Localization.Renting_EndsAt</label>
			<div class="row">
				<div class="col-sm-6">
					<input type="date" name="@Html.NameFor(m => m.EndsAtDate)" id="ends-at-date" value="@Model.EndsAtDate" class="form-control" />
				</div>
				<div class="col-sm-6">
					<select asp-for="EndsAtTime"
							asp-items="@Html.WorkingHourSelectList(Model.Rental.TimeList.ToArray(), Model.EndsAtTime)"
							class="form-control"></select>
				</div>
			</div>
			@Html.ValidationMessageFor(m => m.EndsAtDate, string.Empty, new { @class = "text-danger" })
		</div>
	</div>

	<button type="submit">@Localization.Basket_Rent</button>
</form>
